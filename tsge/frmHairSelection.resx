<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8B////Af///wH///8B////Af///wH///8B////Af///wH///8BMjIyLzA2Pr85RljROUVWyzY+
        SaM3RFbzSlhty0VRYbU5RFOvPkxg0UpacvMyMjI5////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8BMDY+kTM+
        TtU9VXf/NUtq/z9Zfv9dfav/W3qm/1Rym/9QZoXrS1ltyTIyMiX///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8BMjIyHTI/Uek2TGv/QVyC/1Z2o/9jg7H/SVhuxzIyMif///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8BMDU8hzZLaP8+WH3/Xn6r/0pjh/81OD5T////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wExMTEFMjxJz0Fcg/9ff63/QU9kzzExMQX///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wEyO0fNNk1s/1Z2o/9KWW/rNjtCN///
        /wH///8B////ATIyMhH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////ATQ+TM01TGr/XX2r/159
        qf9JXXvnNT1IgzExMQcrOCaBKEAf0zIyMif///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8BMDlEzT9a
        gP9igrH/TGOC70dVasNJX37/NT1Ezy9eGv81dBf/JksZrS87KjH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wEvN0HNQVyC/119qv9EUmbNMjIyCTg9REsuPC35SZ8c/02qG/8zcBf/LzorX////wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wEyMjIL////Af//
        /wH///8BNTk+LTM9Suc3Tm7/XX2q/0lXa83///8BMjIyCTVXIvFJmh7/TKId/z1nJ9kyMjIR////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8BMjIyIyg+
        IcstOShzMjIyBTU7RHVGWnbjQ16D/z1Wev9YeKT/TFpvzf///wEyMjJTIUoT/S1oFP84ZiDrOlwnszIy
        Mgv///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////ATIy
        MikqQyCjMXQU/y1oFP80PULBSV9+/0lZcM09UWzxQ2CI/1Z0nv9JV2vN////Af///wExMzBFLj0oczIy
        MicyMjIP////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8BLzUsZSteFv9OrBz/T7Ac/0ReUfk6QEhZMTExDTA4RM1BXYP/TmyW/0xab83///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wEyMjIRLE0f2UOQG/9Qrx3/OmAl8TIyMgP///8BLzdCzTRKaP9cfKr/RVNmzf//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////ATIyMg0nQB6/KVQY8TZ1GP8tYxb9MjIyWTIyMicxPlHpOVJz/1l5
        pv9JV2vN////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////ATIyMhMyMjIvLj4ogzEzMFP///8BMjIyQTNF
        Xf8wRF//Vnaj/0xab83///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wExMTEtMkFW7zdObv9XdqL/SVdrzf///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wEwNDrNOE5t/0hih/9FU2fN////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////ASo7JLMvNC5RKDwg1SZFHP0wP0//LUA6/zxJW9ExMTEFMjIyCTExMQv///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////ATIyMg8xMTEZJ0ka9yRKFP8rXRT/I18M/yhOGv8nRCD/LUA1/y1II7cvTiPFK0ofyzIy
        MiX///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8BKj0koSRBGt8cTQr/IloM/zJzFP82fBX/P4wa/zmCF/81dRj/OIIW/ziC
        Fv80exX/LVoc9TIyMjn///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////AS48KVchTBLzJlwP/ytnEf8ydRT/N30W/zh9Fv81ehX/O4UY/0WR
        HP9Aixr/N30W/0GKG/8ydRT/K0Ajrf///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8BKjolqR1SCv8saBH/LW4R/zR3FP86gRf/Q4oc/0aQ
        Hf87gRj/R5Ue/0SOHP87hRf/N34V/zqAF/8tYBn5MjIyM////wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wEuNSuXIUwR+SZfDv82eBb/OH0W/0WQ
        Hf9FkB3/UKsf/0ynG/9DjRv/Tqgd/0OLHP88hhj/N34W/zZqHf8yMjI3////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////ATIyMg0mPR7PLmwS/zR2
        Ff88hhj/R5Qd/0qeHf9Npx3/T6wd/06pHf9Nph3/SJcd/0aWG/83fhX/NGYb/zIyMjf///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8BLDwmjR9R
        Df8qaQ//L3AS/0GMGv9Knhz/TaYc/0ygHv9Qrxz/Tqod/02lHv9QsRz/S6Qb/zh8Fv81bRr/NUMuW///
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wEuNSsxKTwity5oE/8xcRP/OH8W/0iWHf9LpBv/TaUd/0yjHv9OqB3/TKUd/0qfHP9HlR3/Spof/zxv
        If81Rit7////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wEyMjInKFIY7TJ2E/9BjBr/Q4wc/0eWG/9MpB3/T6oe/1CxHP9MpB3/RI8b/0eT
        Hf8+dx/9MjUxUzExMQP///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////ATIyMjEsWBnxM3UU/zl/Fv9Gkh3/RZAd/0WPHP9Nph3/Tawa/0eV
        HP9IlR7/P30d/TIyMoX///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8BMjIyOyhRGPUubRL/PoIa/zN3FP8+hhn/PokZ/0eT
        Hf9HlB7/Qo0b/0WQHf85WifX////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8BMjIyWypKHtMtUx3xLUAmpSlY
        F+0zdxT/MnYT/zx9Gv82VSe9N1clzTI4LyH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8BMTExDTIy
        Mhf///8BMDYuZSxDI8s1USbLNk8onzExMQcyMjIN////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>